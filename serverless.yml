service: perfume-shop-api

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  memorySize: 256
  timeout: 10
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:*:*:table/ProductsTable

functions:
  getAllProducts:
    handler: src/lambda.handler
    events:
      - http:
          path: products
          method: get

  getProduct:
    handler: src/lambda.handler
    events:
      - http:
          path: products/{id}
          method: get

  createProduct:
    handler: src/lambda.handler
    events:
      - http:
          path: products
          method: post
          authorizer:
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:eu-central-1:362586210625:userpool/eu-central-1_f3NOeK40e

  updateProduct:
    handler: src/lambda.handler
    events:
      - http:
          path: products/{id}
          method: put
          authorizer:
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:eu-central-1:362586210625:userpool/eu-central-1_f3NOeK40e

  deleteProduct:
    handler: src/lambda.handler
    events:
      - http:
          path: products/{id}
          method: delete
          authorizer:
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:eu-central-1:362586210625:userpool/eu-central-1_f3NOeK40e

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node18
    outdir: dist
    external:
      - aws-sdk
      - class-transformer
      - "@nestjs/microservices"
      - "@nestjs/websockets"
      - "@nestjs/platform-socket.io"
      - amqplib
      - amqp-connection-manager
      - ioredis
      - nats
      - mqtt
      - kafkajs
      - "@grpc/grpc-js"
      - "@grpc/proto-loader"

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
